{
  "metadata": "sequencing_experiment.json",
  "files": [
    "test1_rg_3.bam"
  ],
  "validation": {
    "status": "INVALID",
    "checks": [
      {
        "checker": "c110_rg_id_uniqueness",
        "status": "VALID",
        "message": "Read group ID uniqueness check status: VALID"
      },
      {
        "checker": "c120_permissible_char_in_rg_id",
        "status": "VALID",
        "message": "Read group ID permissible character check status: VALID"
      },
      {
        "checker": "c130_one_sample",
        "status": "INVALID",
        "message": "'samples' section must contain exactly one sample in metadata, 2 found"
      },
      {
        "checker": "c140_platform_unit_uniqueness",
        "status": "VALID",
        "message": "Platform unit uniqueness check status: VALID"
      },
      {
        "checker": "c150_rg_count_match",
        "status": "INVALID",
        "message": "'read_group_count' not populated with an integer or value not greater than 0 in the metadata JSON"
      },
      {
        "checker": "c160_file_r1_r2_check",
        "status": "INVALID",
        "message": "Required field 'file_r1' is not found or populated in metadata JSON in read group: D0RE2_1a_1."
      },
      {
        "checker": "c170_fq_uniqueness_in_rgs",
        "status": "VALID",
        "message": "FASTQ uniqueness in read groups check status: VALID"
      },
      {
        "checker": "c180_file_uniqueness",
        "status": "VALID",
        "message": "Files uniqueness check in files section status: VALID"
      },
      {
        "checker": "c190_no_extra_files",
        "status": "VALID",
        "message": "No extra files check status: VALID"
      },
      {
        "checker": "c200_rg_id_in_bam_uniqueness",
        "status": "VALID",
        "message": "'read_group_id_in_bam' uniqueness check status: VALID"
      },
      {
        "checker": "c220_no_rg_id_in_bam_for_fq",
        "status": "VALID",
        "message": "'read_group_id_in_bam' not populated for FASTQ check: VALID"
      },
      {
        "checker": "c240_submitter_rg_id_collide_with_rg_id_in_bam",
        "status": "VALID",
        "message": "For any read group, when 'read_group_id_in_bam' is not populated, 'submitter_read_group_id' must NOT be the same as 'read_group_id_in_bam' of another read group from the same BAM file. Validation result: VALID"
      },
      {
        "checker": "c605_all_files_accessible",
        "status": "VALID",
        "message": "All submission files accessible check: VALID"
      },
      {
        "checker": "c607_coverage_estimate",
        "status": "INVALID",
        "message": "Sequencing coverage estimate: 4.31e-06, lower than mimimum threshold: 20 for WGS. Validation result: INVALID"
      },
      {
        "checker": "c608_bam_sanity",
        "status": "VALID",
        "message": "BAM sanity check by samtools quickcheck. Validation result: VALID"
      },
      {
        "checker": "c610_rg_id_in_bam",
        "status": "INVALID",
        "message": "Read group ID in BAM header contains non-permissible character (valid characters include: [0-9a-zA-Z-_:\\'\\.]). Offending ID(s): BAM test1_rg_3.bam: D0RH0$.2"
      },
      {
        "checker": "c620_submitter_read_group_id_match",
        "status": "VALID",
        "message": "For each read group, when 'read_group_id_in_bam' is not provided, 'submitter_read_group_id' in the metadata JSON must match RG ID in BAM. Validation result: VALID"
      },
      {
        "checker": "c630_rg_id_in_bam_match",
        "status": "INVALID",
        "message": "'read_group_id_in_bam' specified in 'read_groups' section of the metadata not found in BAM file. Offending ID(s): BAM test1_rg_3.bam: D0RE2_1', D0RH0:2''"
      },
      {
        "checker": "c640_one_sm_in_bam_header",
        "status": "INVALID",
        "message": "SM in @RG headers of all BAM(s) must be populated with the same value. BAM(s) with no SM or multiple SMs, or different SMs from different BAMs are found: BAM test1_rg_3.bam: 'BRCA1234T', 'HCC1143'"
      },
      {
        "checker": "c650_sm_in_bam_matches_metadata",
        "status": "UNKNOWN",
        "message": "An exception occurred during the execution of this checker. This is likely due to problem(s) identified by earlier check(s), please fix reported problem and then run the validation again. More information of the exception can be found in the latest log file under: BRCA1234T.WXS/logs/"
      },
      {
        "checker": "c660_metadata_in_bam_rg_header",
        "status": "UNKNOWN",
        "message": "Not all dependent checks are in VALID status: c160_file_r1_r2_check: INVALID, c610_rg_id_in_bam: INVALID. Please fix reported problem and then run the validation again."
      },
      {
        "checker": "c680_fileSize_fileMd5sum_check",
        "status": "INVALID",
        "message": "The fileSize or fileMd5sum calculated from the submission sequencing files does NOT match the info provided in metadata JSON. Details of the difference: [test1_rg_3.bam: fileSize: 16726 vs 14935, fileMd5sum: 9609b0153f6a7665255311ef5a47507e vs 3f160ccdb1eae97337b42018bf141f7c]"
      }
    ]
  }
}
