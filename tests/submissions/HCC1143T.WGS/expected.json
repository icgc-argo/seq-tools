{
  "files": [
    "test_rg_3.bam"
  ],
  "validation": {
    "status": "INVALID",
    "checks": [
      {
        "checker": "c110_rg_id_uniqueness",
        "status": "VALID",
        "message": "Read group ID uniqueness check status: VALID"
      },
      {
        "checker": "c120_permissible_char_in_rg_id",
        "status": "VALID",
        "message": "Read group ID permissible character check status: VALID"
      },
      {
        "checker": "c130_one_sample",
        "status": "VALID",
        "message": "One and only one sample check status: VALID"
      },
      {
        "checker": "c140_platform_unit_uniqueness",
        "status": "VALID",
        "message": "Platform unit uniqueness check status: VALID"
      },
      {
        "checker": "c150_rg_count_match",
        "status": "VALID",
        "message": "Read groups count check status: VALID"
      },
      {
        "checker": "c160_file_r1_r2_check",
        "status": "VALID",
        "message": "Fields file_r1 and file_r2 check status: VALID"
      },
      {
        "checker": "c170_fq_uniqueness_in_rgs",
        "status": "VALID",
        "message": "FASTQ uniqueness in read groups check status: VALID"
      },
      {
        "checker": "c180_file_uniqueness",
        "status": "VALID",
        "message": "Files uniqueness check in files section status: VALID"
      },
      {
        "checker": "c200_rg_id_in_bam_uniqueness",
        "status": "VALID",
        "message": "'read_group_id_in_bam' uniqueness check status: VALID"
      },
      {
        "checker": "c210_no_path_in_filename",
        "status": "VALID",
        "message": "No path in fileName check in 'files' section status: VALID"
      },
      {
        "checker": "c220_no_rg_id_in_bam_for_fq",
        "status": "VALID",
        "message": "'read_group_id_in_bam' not populated for FASTQ check: VALID"
      },
      {
        "checker": "c605_all_files_accessible",
        "status": "VALID",
        "message": "All submission files accessible check: VALID"
      },
      {
        "checker": "c607_coverage_estimate",
        "status": "INVALID",
        "message": "Sequencing coverage estimate: 4.31e-06, lower than mimimum threshold: 20 for WGS. Validation result: INVALID"
      },
      {
        "checker": "c610_rg_id_in_bam",
        "status": "VALID",
        "message": "Read group ID in BAM header check: VALID"
      },
      {
        "checker": "c630_rg_id_in_bam_match",
        "status": "VALID",
        "message": "'read_group_id_in_bam' in metadata matches RG ID in BAM check: VALID"
      },
      {
        "checker": "c640_one_sm_in_bam_header",
        "status": "VALID",
        "message": "One and only one SM in @RG BAM header check: VALID"
      },
      {
        "checker": "c650_sm_in_bam_matches_metadata",
        "status": "INVALID",
        "message": "SM in BAM header does not match submitterSampleId in metadata JSON: HCC1143 vs HCC1143T"
      },
      {
        "checker": "c660_metadata_in_bam_rg_header",
        "status": "WARNING",
        "message": "Information (excluding ID and SM which are validated elsewhere) in BAM @RG header does NOT match experiment/read group info in metadata JSON. NOTE that information is the metadata JSON document will be kept and used in ICGC ARGO uniform analysis while unmatched info in BAM header will be lost. Details of the difference: [BAM test_rg_3.bam @RG C0HVY.2: (CN: BI vs EXT)]; [BAM test_rg_3.bam @RG D0RE2_1': (CN: BI vs EXT)]; [BAM test_rg_3.bam @RG D0RH0:2'': (CN: BI vs EXT)]"
      }
    ]
  }
}
