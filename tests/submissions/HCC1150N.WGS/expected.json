{
  "files": [
    "D0RE2.1_r2.fq.gz",
    "D0RH0.2_r1.fq.gz",
    "D0RE2.1_r1.fq.gz",
    "D0RH0.2_r2.fq.gz",
    "C0HVY.2_r2.fq.gz",
    "C0HVY.2_r1.fq.gz"
  ],
  "validation": {
    "status": "INVALID",
    "checks": [
      {
        "checker": "c110_rg_id_uniqueness",
        "status": "VALID",
        "message": "Read group ID uniqueness check status: VALID"
      },
      {
        "checker": "c120_permissible_char_in_rg_id",
        "status": "VALID",
        "message": "Read group ID permissible character check status: VALID"
      },
      {
        "checker": "c130_one_sample",
        "status": "VALID",
        "message": "One and only one sample check status: VALID"
      },
      {
        "checker": "c140_platform_unit_uniqueness",
        "status": "VALID",
        "message": "Platform unit uniqueness check status: VALID"
      },
      {
        "checker": "c150_rg_count_match",
        "status": "VALID",
        "message": "Read groups count check status: VALID"
      },
      {
        "checker": "c160_file_r1_r2_check",
        "status": "INVALID",
        "message": "Fields 'file_r1' and 'file_r2' should NOT be the same for paired end FASTQ sequencing reads in read group: D0RE2.1."
      },
      {
        "checker": "c170_fq_uniqueness_in_rgs",
        "status": "INVALID",
        "message": "FASTQ file(s) duplicated in 'file_r1/file_r2' of the 'read_groups' section in the metadata: 'D0RE2.1_r1.fq.gz, D0RH0.2_r1.fq.gz'"
      },
      {
        "checker": "c180_file_uniqueness",
        "status": "VALID",
        "message": "Files uniqueness check in files section status: VALID"
      },
      {
        "checker": "c200_rg_id_in_bam_uniqueness",
        "status": "VALID",
        "message": "'read_group_id_in_bam' uniqueness check status: VALID"
      },
      {
        "checker": "c210_no_path_in_filename",
        "status": "VALID",
        "message": "No path in fileName check in 'files' section status: VALID"
      },
      {
        "checker": "c220_no_rg_id_in_bam_for_fq",
        "status": "VALID",
        "message": "'read_group_id_in_bam' not populated for FASTQ check: VALID"
      },
      {
        "checker": "c230_files_info_data_category",
        "status": "INVALID",
        "message": "Field 'data_category' is NOT found or NOT populated with 'Sequencing Reads' for file(s): 'C0HVY.2_r1.fq.gz, C0HVY.2_r2.fq.gz, D0RE2.1_r1.fq.gz, D0RE2.1_r2.fq.gz, D0RH0.2_r1.fq.gz, D0RH0.2_r2.fq.gz'"
      },
      {
        "checker": "c240_submitter_rg_id_collide_with_rg_id_in_bam",
        "status": "VALID",
        "message": "For any read group, when 'read_group_id_in_bam' is not populated, 'submitter_read_group_id' must NOT be the same as 'read_group_id_in_bam' of another read group from the same BAM file. Validation result: VALID"
      },
      {
        "checker": "c605_all_files_accessible",
        "status": "VALID",
        "message": "All submission files accessible check: VALID"
      },
      {
        "checker": "c607_coverage_estimate",
        "status": "INVALID",
        "message": "Sequencing coverage estimate: 4.31e-06, lower than mimimum threshold: 20 for WGS. Validation result: INVALID"
      },
      {
        "checker": "c610_rg_id_in_bam",
        "status": "VALID",
        "message": "Read group ID in BAM header check: VALID"
      },
      {
        "checker": "c620_submitter_read_group_id_match",
        "status": "VALID",
        "message": "For each read group, when 'read_group_id_in_bam' is not provided, 'submitter_read_group_id' in the metadata JSON must match RG ID in BAM. Validation result: VALID"
      },
      {
        "checker": "c630_rg_id_in_bam_match",
        "status": "VALID",
        "message": "'read_group_id_in_bam' in metadata matches RG ID in BAM check: VALID"
      },
      {
        "checker": "c640_one_sm_in_bam_header",
        "status": "VALID",
        "message": "One and only one SM in @RG BAM header check: VALID"
      },
      {
        "checker": "c650_sm_in_bam_matches_metadata",
        "status": "VALID",
        "message": "One and only one SM in @RG BAM header check: VALID"
      },
      {
        "checker": "c660_metadata_in_bam_rg_header",
        "status": "UNKNOWN",
        "message": "Not all dependent checks are in VALID status: c160_file_r1_r2_check: INVALID. Please fix reported problem and then run the validation again."
      },
      {
        "checker": "c680_fileSize_fileMd5sum_match",
        "status": "INVALID",
        "message": "The fileSize or fileMd5sum calculated from the submission sequencing files does NOT match the info provided in metadata JSON. Details of the difference: [C0HVY.2_r1.fq.gz: fileSize: 2040 vs 5381, fileMd5sum: 64cf635dbc54f53cae2cb03ec8e8471b vs 6584ebb05edfbd6f59be6307556bd871]; [C0HVY.2_r2.fq.gz: fileSize: 2042 vs 5381, fileMd5sum: ceb7e66d031cb894fa9d1d3f8da65fc7 vs d649696f346eb75b95b68e8ecd45f44f]; [D0RE2.1_r1.fq.gz: fileSize: 2309 vs 6148, fileMd5sum: 44bea7aa32a1afb68eec24496b608545 vs 058510bbdab2dccc14a2d7402a21248d]; [D0RE2.1_r2.fq.gz: fileSize: 2365 vs 6148, fileMd5sum: d73b37eca9375258ab42905f7943b1b6 vs 5fb35647198666b6a06e8539074282fd]; [D0RH0.2_r1.fq.gz: fileSize: 1872 vs 4784, fileMd5sum: b90a3c9750db29406f31e9488d5b7e2b vs eb109b8774df03084024bc09a86721be]; [D0RH0.2_r2.fq.gz: fileSize: 1894 vs 4784, fileMd5sum: a407247b584daa078114ab05e6e489be vs ed209fda15a5928087104253a6bfb42d]"
      }
    ]
  }
}
