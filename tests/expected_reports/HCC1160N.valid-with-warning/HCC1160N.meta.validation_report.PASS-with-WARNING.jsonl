{
  "tool": {
    "name": "seq-tools",
    "version": "1.0.0-rc.2"
  },
  "metadata_file": "/Users/junjun/A.ARGO/git/seq-tools/tests/submissions/HCC1160N.valid-with-warning/HCC1160N.meta.json",
  "data_dir": "/Users/junjun/A.ARGO/git/seq-tools/tests/submissions/HCC1160N.valid-with-warning",
  "validation": {
    "status": "PASS-with-WARNING",
    "message": "Please see individual checks for details",
    "checks": [
      {
        "checker": "c110_rg_id_uniqueness",
        "status": "PASS",
        "message": "Read group ID uniqueness check status: PASS"
      },
      {
        "checker": "c120_permissible_char_in_rg_id",
        "status": "PASS",
        "message": "Read group ID permissible character check status: PASS"
      },
      {
        "checker": "c130_one_sample",
        "status": "PASS",
        "message": "One and only one sample check status: PASS"
      },
      {
        "checker": "c140_platform_unit_uniqueness",
        "status": "PASS",
        "message": "Platform unit uniqueness check status: PASS"
      },
      {
        "checker": "c150_rg_count_match",
        "status": "PASS",
        "message": "Read groups count check status: PASS"
      },
      {
        "checker": "c160_file_r1_r2_check",
        "status": "PASS",
        "message": "Fields file_r1 and file_r2 check status: PASS"
      },
      {
        "checker": "c170_fq_uniqueness_in_rgs",
        "status": "PASS",
        "message": "FASTQ uniqueness in read groups check status: PASS"
      },
      {
        "checker": "c180_file_uniqueness",
        "status": "PASS",
        "message": "Files uniqueness check in files section status: PASS"
      },
      {
        "checker": "c190_no_extra_files",
        "status": "PASS",
        "message": "No extra files check status: PASS"
      },
      {
        "checker": "c200_rg_id_in_bam_uniqueness",
        "status": "PASS",
        "message": "'read_group_id_in_bam' uniqueness check status: PASS"
      },
      {
        "checker": "c210_no_path_in_filename",
        "status": "PASS",
        "message": "No path in fileName check in 'files' section status: PASS"
      },
      {
        "checker": "c220_no_rg_id_in_bam_for_fq",
        "status": "PASS",
        "message": "'read_group_id_in_bam' not populated for FASTQ check: PASS"
      },
      {
        "checker": "c230_files_info_data_category",
        "status": "PASS",
        "message": "Field 'info.data_category' is found populated with 'Sequencing Reads'. Validation status: PASS"
      },
      {
        "checker": "c240_submitter_rg_id_collide_with_rg_id_in_bam",
        "status": "PASS",
        "message": "For any read group, when 'read_group_id_in_bam' is not populated, 'submitter_read_group_id' must NOT be the same as 'read_group_id_in_bam' of another read group from the same BAM file. Validation result: PASS"
      },
      {
        "checker": "c250_file_data_type",
        "status": "PASS",
        "message": "Field 'dataType' is found populated with 'Submitted Reads'. Validation status: PASS"
      },
      {
        "checker": "c260_filename_pattern",
        "status": "PASS",
        "message": "'fileName' matches expected pattern '^[A-Za-z0-9]{1}[A-Za-z0-9_\\.\\-]+$' in 'files' section. Validation status: PASS"
      },
      {
        "checker": "c605_all_files_accessible",
        "status": "PASS",
        "message": "All data files accessible check: PASS"
      },
      {
        "checker": "c608_bam_sanity",
        "status": "PASS",
        "message": "BAM sanity check by samtools quickcheck. Validation result: PASS"
      },
      {
        "checker": "c610_rg_id_in_bam",
        "status": "PASS",
        "message": "Read group ID in BAM header check: PASS"
      },
      {
        "checker": "c620_submitter_read_group_id_match",
        "status": "PASS",
        "message": "For each read group, when 'read_group_id_in_bam' is not provided, 'submitter_read_group_id' in the metadata JSON must match RG ID in BAM. Validation result: PASS"
      },
      {
        "checker": "c630_rg_id_in_bam_match",
        "status": "PASS",
        "message": "'read_group_id_in_bam' in metadata matches RG ID in BAM check: PASS"
      },
      {
        "checker": "c640_one_sm_in_bam_header",
        "status": "PASS",
        "message": "One and only one SM in @RG BAM header check: PASS"
      },
      {
        "checker": "c650_sm_in_bam_matches_metadata",
        "status": "PASS",
        "message": "One and only one SM in @RG BAM header check: PASS"
      },
      {
        "checker": "c660_metadata_in_bam_rg_header",
        "status": "WARNING",
        "message": "Information (excluding ID and SM which are validated elsewhere) in BAM @RG header does NOT match experiment/read group info in metadata JSON. NOTE that information is the metadata JSON document will be kept and used in ICGC ARGO uniform analysis while unmatched info in BAM header will be lost. Details of the difference: [BAM test_rg_6n.bam @RG C0HVY.2: (LB: Pond-147580-a vs Pond-147580)]; [BAM test_rg_6n.bam @RG D0RE2_1': (LB: Pond-147580-a vs Pond-147580)]; [BAM test_rg_6n.bam @RG D0RH0:2'': (LB: Pond-147580-a vs Pond-147580)]"
      },
      {
        "checker": "c680_fileSize_fileMd5sum_match",
        "status": "PASS",
        "message": "The fileSize and fileMd5sum calculated from the sequencing files both match the info provided in metadata JSON: PASS"
      }
    ]
  }
}
